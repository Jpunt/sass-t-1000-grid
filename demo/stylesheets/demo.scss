@import 'bourbon/bourbon';
@import 'reset.scss';
@import '../../dist/T-1000.scss';

/*
 * GRID
 */
$space-s: 4px;
$space-m: 8px;
$space-l: 12px;

$mq-s: "only screen and (max-width:689px)";
$mq-m: "only screen and (min-width:690px)";
$mq-l: "only screen and (min-width:1000px)";

$scalable-props-single: (padding, margin, padding-top);
$scalable-props-half:   (padding-top);
$scalable-props-double: (padding, padding-left, padding-right, padding-top, padding-bottom, margin-top, margin-bottom);
@include reset-properties((padding, margin-bottom));

@media #{$mq-s} {
  @include grid(s, 2, $space-s, prefix);
  @include properties($space-s, $scalable-props-single);
  @include properties($space-s, $scalable-props-double, double);
  @include properties-for-layout(s, $space-s, $scalable-props-half, half);
  @include reset-properties-for-layout(s, (padding-bottom, padding-top));

  .row { padding-top: ($space-s * 4); padding-bottom: ($space-s * 4); }
}

@media #{$mq-m} {
  @include grid(m, 6, $space-m, prefix);
  @include properties($space-m, $scalable-props-single);
  @include properties($space-m, $scalable-props-double, double);
  @include properties-for-layout(m, $space-m, $scalable-props-half, half);

  .row { width: 98%; }
}

@media #{$mq-l} {
  @include grid(l, 12, $space-l, prefix);
  @include properties($space-l, $scalable-props-single);
  @include properties($space-l, $scalable-props-double, double);
  @include properties-for-layout(l, $space-l, $scalable-props-half, half);

  .row { width: 90%; }
}

.row {
  margin: 0 auto;
  min-width: 240px;
  max-width: 1600px;
}

/*
 * Type
 */

body {
  font-size: 100%;
  font-family: 'Open Sans', Helvetica, sans-serif;
}

h1 {
  padding: 1em 0;
  font-size: 4em;
  font-weight: normal;
  text-align: center;
}

h2 {
  @media #{$mq-s} { font-size: 1.4em; }
  @media #{$mq-m} { font-size: 1.6em; }
  @media #{$mq-l} { font-size: 1.8em; }
  line-height: 1.3em;
}

h3 {
  @media #{$mq-s} { font-size: 1.0em; }
  @media #{$mq-m} { font-size: 1.05em; }
  @media #{$mq-l} { font-size: 1.1em; }
  line-height: 1.3em;
}

p, code {
  @media #{$mq-s} { font-size: 0.9em; }
  @media #{$mq-m} { font-size: 1.0em; }
  @media #{$mq-l} { font-size: 1.05em; }
  line-height: 1.7em;
}

code {
  padding: 0.2em 0.4em
}

strong {
  font-weight: 700;
}

/*
 * Colors
 */

$bg-medium: #f0f0f0;
$bg-light: #fdfdfd;
$text: #333;
$green: #2ee3a5;

body {
  background-color: $bg-medium;
  color: $text;

  code {
    background-color: #e4e4e4;
  }
}

.bg-light {
  background-color: $bg-light;
}

.row {
  border-bottom: 1px solid #e4e4e4;
}

/*
 * Code
 */
.gist-embed {
  @media #{$mq-s} { margin: ($space-s * 2) 0; font-size: 0.9em; }
  @media #{$mq-m} { margin: ($space-m * 2) 0; }
  @media #{$mq-l} { margin: ($space-l * 2) 0; }

  .gist {
    .gist-file {
      margin-bottom: 0;
      border-radius: 0;
      border-width: 3px;
      border-color: lighten($bg-medium, 3%);

      .gist-data {
        border-bottom: none;

        .file-data {
          overflow: auto;
          max-height: 17em;
          @media #{$mq-s} { max-height: 5.6em; }
          background-color: lighten($bg-medium, 5%);

          .line-numbers {
            background-color: lighten($bg-medium, 4.5%);
          }
        }
      }

      .gist-meta {
        background: lighten($bg-medium, 3%);
      }
    }
  }
}

/*
 * Download
 */
.download {
  text-align: center;

  .file {
    font-size: 1.7em;
    height: 2em;
    overflow: hidden;
    padding-top: 5px;
    margin-top: -5px;

    a {
      display: block;
      width: 100%;
      height: 100%;
      vertical-align: middle;
      background-color: lighten($green, 5%);
      color: white;
      text-decoration: none;
      text-transform: uppercase;
      @include transition(all 0.2s $ease-out-expo);

      span {
        vertical-align: sub;
      }

      &,
      &:active {
        border-bottom: 0px solid darken($green, 20%);
        margin-top: 0;
      }

      &:hover {
        margin-top: -5px;
        border-bottom-width: 5px;
      }
    }
  }

  .repo {
    font-size: 0.5em;
    @include transition(color 0.1s);
    color: lighten($text, 30%);

    a {
      color: inherit;

      &:hover {
        color: black;
      }
    }
  }

  &:hover {
    .file a {
      background-color: $green;
    }
    .repo {
      color: $text;
    }
  }
}