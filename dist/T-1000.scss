.row {
  position: relative;

  // Included pie-clearfix
  *zoom: 1;
  clear: both;
  &:after {
    content: "";
    display: table;
    clear: both
  }
}

.col {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  float: left;
  overflow: hidden;
  position: relative;
}

@mixin grid($layout, $columns, $padding) {
  .row {
    padding: $padding;
  }

  .col {
    padding: $padding;
  }

  // .m-2, .xl-6, etc
  @for $i from 1 through $columns {
    .#{$layout}-#{$i} {
      width: (100% / $columns) * $i;
    }
  }
}

@mixin properties($padding, $properties, $scale:false) {
  @each $property in $properties {

    // .margin, .padding, etc
    @if($scale == false) {
      .#{$property} {
        #{$property}: $padding;
      }
    }

    // .margin-double, .padding-double, etc
    @if($scale == double) {
      .#{$property}-double {
        #{$property}: ($padding * 2);
      }
    }

    // .margin-half, .padding-half, etc
    @if($scale == half) {
      .#{$property}-half {
        #{$property}: ($padding / 2);
      }
    }

    // .margin-triple, .padding-triple, etc
    @if($scale == triple) {
      .#{$property}-triple {
        #{$property}: ($padding * 3);
      }
    }
  }
}

@mixin properties-for-layout($layout, $padding, $properties, $scale:false) {
  @each $property in $properties {

    // .s-margin, .s-padding, etc
    @if($scale == false) {
      .#{$layout}-#{$property} {
        #{$property}: $padding;
      }
    }

    // .s-margin-double, .s-padding-double, etc
    @if($scale == double) {
      .#{$layout}-#{$property}-double {
        #{$property}: ($padding * 2);
      }
    }

    // .s-margin-half, .s-padding-half, etc
    @if($scale == half) {
      .#{$layout}-#{$property}-half {
        #{$property}: ($padding / 2);
      }
    }

    // .s-margin-triple, .s-padding-triple, etc
    @if($scale == triple) {
      .#{$layout}-#{$property}-triple {
        #{$property}: ($padding * 3);
      }
    }
  }
}

@mixin reset-properties($properties) {
  @each $property in $properties {
    // .reset-margin, .reset-padding, etc
    .reset-#{$property} {
      #{$property}: 0 !important;
    }
  }
}

@mixin reset-properties-for-layout($layout, $properties) {
  @each $property in $properties {
    // .s-reset-margin, .s-reset-padding, etc
    .#{$layout}-reset-#{$property} {
      #{$property}: 0 !important;
    }
  }
}
